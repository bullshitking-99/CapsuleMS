{"remainingRequest":"C:\\Users\\86155\\.vscode\\WEBcode\\VUE\\CapsuleMS\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\86155\\.vscode\\WEBcode\\VUE\\CapsuleMS\\node_modules\\vue-schart\\src\\vue-schart.vue?vue&type=template&id=260b29c3","dependencies":[{"path":"C:\\Users\\86155\\.vscode\\WEBcode\\VUE\\CapsuleMS\\node_modules\\vue-schart\\src\\vue-schart.vue","mtime":1649401825000},{"path":"C:\\Users\\86155\\.vscode\\WEBcode\\VUE\\CapsuleMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649401825000},{"path":"C:\\Users\\86155\\.vscode\\WEBcode\\VUE\\CapsuleMS\\node_modules\\babel-loader\\lib\\index.js","mtime":1649401825000},{"path":"C:\\Users\\86155\\.vscode\\WEBcode\\VUE\\CapsuleMS\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1649401825000},{"path":"C:\\Users\\86155\\.vscode\\WEBcode\\VUE\\CapsuleMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649401825000},{"path":"C:\\Users\\86155\\.vscode\\WEBcode\\VUE\\CapsuleMS\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1649401825000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2PgogICAgICAgIDxjYW52YXMgOmlkPSJjYW52YXNJZCI+PC9jYW52YXM+CiAgICA8L2Rpdj4K"},{"version":3,"sources":["C:\\Users\\86155\\.vscode\\WEBcode\\VUE\\CapsuleMS\\node_modules\\vue-schart\\src\\vue-schart.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,CAAC;QACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/86155/.vscode/WEBcode/VUE/CapsuleMS/node_modules/vue-schart/src/vue-schart.vue","sourceRoot":"","sourcesContent":["<template>\n    <div>\n        <canvas :id=\"canvasId\"></canvas>\n    </div>\n</template>\n\n<script>\nimport Schart from \"schart.js\";\nexport default {\n    props: {\n        canvasId: {\n            type: String,\n            default: \"\",\n            required: true\n        },\n        options: {\n            type: Object,\n            required: true\n        }\n    },\n    mounted() {\n        this.renderChart();\n    },\n    methods: {\n        renderChart() {\n            if (!this.checkOptions()) {\n                return;\n            }\n            const opt = { ...this.options };\n            new Schart(this.canvasId, opt);\n        },\n        checkOptions() {\n            const opt = this.options;\n            if (!opt.datasets || !opt.datasets.length) {\n                return false;\n            }\n            if (!opt.labels || !opt.labels.length) {\n                return false;\n            }\n            return true;\n        }\n    },\n    watch: {\n        options: {\n            handler(newValue, oldValue) {\n                this.renderChart();\n            },\n            deep: true\n        }\n    }\n};\n</script>"]}]}